{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\BlazorHybridDesktop.csproj","Configuration":{"ConfigurationName":"Default","LanguageVersion":"3.0","Extensions":[]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":1199217401,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Pages.Counter","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Counter"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Pages.Counter"}},{"HashCode":1270179027,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Pages.Counter","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.Pages.Counter"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Pages.Counter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1797387671,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Pages.FetchData","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FetchData"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Pages.FetchData"}},{"HashCode":1383963041,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Pages.FetchData","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.Pages.FetchData"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Pages.FetchData","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1888475968,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Pages.Index","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Pages.Index"}},{"HashCode":-1131953331,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Pages.Index","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.Pages.Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Pages.Index","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-811905063,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Shared.MainLayout","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.MainLayout"}},{"HashCode":497844345,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Shared.MainLayout","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.MainLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2010085235,"Kind":"Components.ChildContent","Name":"BlazorHybridDesktop.WebUI.Shared.MainLayout.Body","AssemblyName":"BlazorHybridDesktop","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-19670401,"Kind":"Components.ChildContent","Name":"BlazorHybridDesktop.WebUI.Shared.MainLayout.Body","AssemblyName":"BlazorHybridDesktop","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"BlazorHybridDesktop.WebUI.Shared.MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1492382814,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Shared.NavMenu","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.NavMenu"}},{"HashCode":-274480856,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Shared.NavMenu","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.Shared.NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.NavMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":828551644,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Shared.SurveyPrompt","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.SurveyPrompt"}},{"HashCode":1492339044,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.Shared.SurveyPrompt","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.Shared.SurveyPrompt","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1282650956,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.App","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.App"}},{"HashCode":-659901755,"Kind":"Components.Component","Name":"BlazorHybridDesktop.WebUI.App","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.WebUI.App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.WebUI.App","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1999210798,"Kind":"Components.Component","Name":"BlazorHybridDesktop.Main","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Main"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.Main"}},{"HashCode":1760203189,"Kind":"Components.Component","Name":"BlazorHybridDesktop.Main","AssemblyName":"BlazorHybridDesktop","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorHybridDesktop.Main"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"BlazorHybridDesktop.Main","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":565830767,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}},{"HashCode":1654776035,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1721455576,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ActivityIndicator","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActivityIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.Color\" /> of the ActivityIndicator. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.Color\" /> used to display the ActivityIndicator. Default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"IsRunning","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets the value indicating if the ActivityIndicator is running. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:System.Boolean\" /> indicating if the ActivityIndicator is running.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsRunning"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ActivityIndicator"}},{"HashCode":1189835610,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ActivityIndicator","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ActivityIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.Color\" /> of the ActivityIndicator. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.Color\" /> used to display the ActivityIndicator. Default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"IsRunning","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets the value indicating if the ActivityIndicator is running. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:System.Boolean\" /> indicating if the ActivityIndicator is running.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsRunning"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ActivityIndicator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":138462551,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.BaseShellItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BaseShellItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BaseShellItem"}},{"HashCode":-1494504541,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.BaseShellItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.BaseShellItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BaseShellItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":718329645,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BlazorWebView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorHandler","TypeName":"Microsoft.MobileBlazorBindings.WebView.Elements.IBlazorErrorHandler","Documentation":"\n            <summary>\n            Gets or sets the ErrorHandler that will be used to catch unhandled exceptions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorHandler"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView"}},{"HashCode":-874408772,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorHandler","TypeName":"Microsoft.MobileBlazorBindings.WebView.Elements.IBlazorErrorHandler","Documentation":"\n            <summary>\n            Gets or sets the ErrorHandler that will be used to catch unhandled exceptions.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorHandler"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1055256849,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BlazorWebView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-203567833,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BlazorWebView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-358314241,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.BoxView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BoxView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the rectangle. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the rectangle. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"Xamarin.Forms.CornerRadius?","Documentation":"\n            <summary>\n            Gets or sets the corner radius for the box view.\n            </summary>\n            <value>\n            The corner radius for the box view.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BoxView"}},{"HashCode":-1048137024,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.BoxView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.BoxView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the rectangle. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the rectangle. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"Xamarin.Forms.CornerRadius?","Documentation":"\n            <summary>\n            Gets or sets the corner radius for the box view.\n            </summary>\n            <value>\n            The corner radius for the box view.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.BoxView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":198141489,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Button","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnPress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRelease","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnRelease","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets a color that describes the border stroke color of the button. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used as the border stroke color; the default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the width of the border. This is a bindable property.\n            </summary>\n            <value>\n            The width of the button border; the default is 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the corner radius for the button, in device-independent units.\n            </summary>\n            <value>\n            The corner radius for the button, in device-independent units.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the button text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family to which the font for the button text belongs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the size of the font of the button text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"ImageSource","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Allows you to display a bitmap image on the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageSource"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the padding for the button.\n            </summary>\n            <value>\n            The padding for the button.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the Text displayed as the content of the button. This is a bindable property.\n            </summary>\n            <value>\n            The text displayed in the button. The default value is <see langword=\"null\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.Color\" /> for the text of the button. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:Xamarin.Forms.Color\" /> value.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Button"}},{"HashCode":-805004058,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Button","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnPress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRelease","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnRelease","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets a color that describes the border stroke color of the button. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used as the border stroke color; the default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the width of the border. This is a bindable property.\n            </summary>\n            <value>\n            The width of the button border; the default is 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the corner radius for the button, in device-independent units.\n            </summary>\n            <value>\n            The corner radius for the button, in device-independent units.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the button text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family to which the font for the button text belongs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the size of the font of the button text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"ImageSource","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Allows you to display a bitmap image on the Button.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ImageSource"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the padding for the button.\n            </summary>\n            <value>\n            The padding for the button.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the Text displayed as the content of the button. This is a bindable property.\n            </summary>\n            <value>\n            The text displayed in the button. The default value is <see langword=\"null\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.Color\" /> for the text of the button. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:Xamarin.Forms.Color\" /> value.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Button","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1112178493,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Button.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Button.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-564501745,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Button.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Button.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1471987536,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.CheckBox","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.CheckBox"}},{"HashCode":1342476355,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.CheckBox","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.CheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Color","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.CheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1953627996,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ContentPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentPage"}},{"HashCode":-1208309138,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ContentPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ContentPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentPage","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1053426936,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ContentPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ContentPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1160492235,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ContentPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ContentPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":386071379,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ContentView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentView"}},{"HashCode":-79523557,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ContentView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ContentView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":825983692,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ContentView.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ContentView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1090102066,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ContentView.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ContentView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ContentView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":325593259,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.DatePicker","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Metadata":{"Common.PropertyName":"DateChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"Date","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            Gets or sets the displayed date. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:System.DateTime\" /> displayed in the DatePicker.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Date"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the date picker text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the font family for the picker text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the size of the font for the text in the picker.\n            </summary>\n            <value>\n            A <see langword=\"double\" /> that indicates the size of the font.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format of the date to display to the user. This is a dependency property.\n            </summary>\n            <value>\n            A valid date format.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"MaximumDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The highest date selectable for this DatePicker. This is a bindable property.\n            </summary>\n            <value>\n            The maximum <see cref=\"T:System.DateTime\" /> selectable for the DateEntry. Default December 31, 2100.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaximumDate"}},{"Kind":"Components.Component","Name":"MinimumDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The lowest date selectable for this DatePicker. This is a bindable property.\n            </summary>\n            <value>\n            The minimum <see cref=\"T:System.DateTime\" /> selectable for the DateEntry. Default January 1, 1900.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumDate"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color for the date picker.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.DatePicker"}},{"HashCode":-518129514,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.DatePicker","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.DatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Metadata":{"Common.PropertyName":"DateChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"Date","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            Gets or sets the displayed date. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:System.DateTime\" /> displayed in the DatePicker.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Date"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the date picker text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the font family for the picker text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the size of the font for the text in the picker.\n            </summary>\n            <value>\n            A <see langword=\"double\" /> that indicates the size of the font.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format of the date to display to the user. This is a dependency property.\n            </summary>\n            <value>\n            A valid date format.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"MaximumDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The highest date selectable for this DatePicker. This is a bindable property.\n            </summary>\n            <value>\n            The maximum <see cref=\"T:System.DateTime\" /> selectable for the DateEntry. Default December 31, 2100.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaximumDate"}},{"Kind":"Components.Component","Name":"MinimumDate","TypeName":"System.DateTime?","Documentation":"\n            <summary>\n            The lowest date selectable for this DatePicker. This is a bindable property.\n            </summary>\n            <value>\n            The minimum <see cref=\"T:System.DateTime\" /> selectable for the DateEntry. Default January 1, 1900.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumDate"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color for the date picker.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.DatePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":888881905,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Entry","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Entry"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnCompleted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearButtonVisibility","TypeName":"Xamarin.Forms.ClearButtonVisibility?","Metadata":{"Common.PropertyName":"ClearButtonVisibility"}},{"Kind":"Components.Component","Name":"CursorPosition","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the position of the cursor.\n            </summary>\n            <value>\n            The position of the cursor.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CursorPosition"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the Entry element text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family for the Entry element text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets the size of the font for the Entry element text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"HorizontalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Documentation":"\n            <summary>\n            Gets or sets the horizontal text alignment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HorizontalTextAlignment"}},{"Kind":"Components.Component","Name":"IsPassword","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates if the entry should visually obscure typed text.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is a password box; otherwise, <see langword=\"false\" />. Default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsPassword"}},{"Kind":"Components.Component","Name":"IsTextPredictionEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether text prediction and automatic text correction is on or off.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if text correction is on. Otherwise, <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTextPredictionEnabled"}},{"Kind":"Components.Component","Name":"ReturnType","TypeName":"Xamarin.Forms.ReturnType?","Documentation":"\n            <summary>\n            Gets or sets an enumeration value that controls the appearance of the return button.\n            </summary>\n            <value>\n            An enumeration value that controls the appearance of the return button.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ReturnType"}},{"Kind":"Components.Component","Name":"SelectionLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets the length of the selection.\n            </summary>\n            <value>\n            The length of the selection.\n            </value>\n        ","Metadata":{"Common.PropertyName":"SelectionLength"}},{"Kind":"Components.Component","Name":"VerticalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Metadata":{"Common.PropertyName":"VerticalTextAlignment"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder.\n            </summary>\n            <value>\n            The number of device-independent units that should be in between characters in the text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether user should be prevented from modifying the text. Default is <see langword=\"false\" />.\n            </summary>\n            <value>\n            If <see langword=\"true\" />, user cannot modify text. Else, <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsSpellCheckEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether spell checking is enabled.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if spell checking is enabled. Otherwise <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsSpellCheckEnabled"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the maximum allowed length of input.\n            </summary>\n            <value>\n            An integer in the interval [0,<c>int.MaxValue</c>]. The default value is <c>Int.MaxValue</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text that is displayed when the control is empty.\n            </summary>\n            <value>\n            The text that is displayed when the control is empty.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PlaceholderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the placeholder text.\n            </summary>\n            <value>\n            The color of the placeholder text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"PlaceholderColor"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text of the input view. This is a bindable property.\n            </summary>\n            <value>\n            A string containing the text of the input view. The default value is null.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Entry"}},{"HashCode":-725325715,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Entry","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Entry"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnCompleted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClearButtonVisibility","TypeName":"Xamarin.Forms.ClearButtonVisibility?","Metadata":{"Common.PropertyName":"ClearButtonVisibility"}},{"Kind":"Components.Component","Name":"CursorPosition","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the position of the cursor.\n            </summary>\n            <value>\n            The position of the cursor.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CursorPosition"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the Entry element text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family for the Entry element text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets the size of the font for the Entry element text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"HorizontalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Documentation":"\n            <summary>\n            Gets or sets the horizontal text alignment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HorizontalTextAlignment"}},{"Kind":"Components.Component","Name":"IsPassword","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates if the entry should visually obscure typed text.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is a password box; otherwise, <see langword=\"false\" />. Default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsPassword"}},{"Kind":"Components.Component","Name":"IsTextPredictionEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether text prediction and automatic text correction is on or off.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if text correction is on. Otherwise, <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTextPredictionEnabled"}},{"Kind":"Components.Component","Name":"ReturnType","TypeName":"Xamarin.Forms.ReturnType?","Documentation":"\n            <summary>\n            Gets or sets an enumeration value that controls the appearance of the return button.\n            </summary>\n            <value>\n            An enumeration value that controls the appearance of the return button.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ReturnType"}},{"Kind":"Components.Component","Name":"SelectionLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets the length of the selection.\n            </summary>\n            <value>\n            The length of the selection.\n            </value>\n        ","Metadata":{"Common.PropertyName":"SelectionLength"}},{"Kind":"Components.Component","Name":"VerticalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Metadata":{"Common.PropertyName":"VerticalTextAlignment"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder.\n            </summary>\n            <value>\n            The number of device-independent units that should be in between characters in the text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether user should be prevented from modifying the text. Default is <see langword=\"false\" />.\n            </summary>\n            <value>\n            If <see langword=\"true\" />, user cannot modify text. Else, <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsSpellCheckEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether spell checking is enabled.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if spell checking is enabled. Otherwise <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsSpellCheckEnabled"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the maximum allowed length of input.\n            </summary>\n            <value>\n            An integer in the interval [0,<c>int.MaxValue</c>]. The default value is <c>Int.MaxValue</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text that is displayed when the control is empty.\n            </summary>\n            <value>\n            The text that is displayed when the control is empty.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PlaceholderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the placeholder text.\n            </summary>\n            <value>\n            The color of the placeholder text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"PlaceholderColor"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text of the input view. This is a bindable property.\n            </summary>\n            <value>\n            A string containing the text of the input view. The default value is null.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Entry","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":478159890,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlyoutItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem"}},{"HashCode":-2036923441,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-117036574,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FlyoutItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-68940832,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.FlyoutItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1501805747,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Frame","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Frame"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BorderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the border color for the frame.\n            </summary>\n            <value>\n            The border color for the frame.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Gets or sets the corner radius of the frame.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"HasShadow","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a flag indicating if the Frame has a shadow displayed. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:System.Boolean\" /> indicating whether or not the Frame has a shadow. Default is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HasShadow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Frame"}},{"HashCode":-807599905,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Frame","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Frame"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BorderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the border color for the frame.\n            </summary>\n            <value>\n            The border color for the frame.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"System.Single?","Documentation":"\n            <summary>\n            Gets or sets the corner radius of the frame.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"HasShadow","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a flag indicating if the Frame has a shadow displayed. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:System.Boolean\" /> indicating whether or not the Frame has a shadow. Default is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HasShadow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Frame","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-760266240,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Frame.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Frame"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Frame.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1733986740,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Frame.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Frame"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Frame.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1112851733,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.GestureElement","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GestureElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GestureElement"}},{"HashCode":-1089764674,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.GestureElement","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.GestureElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GestureElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1395464126,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.GestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GestureRecognizer"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GestureRecognizer"}},{"HashCode":-71627371,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.GestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.GestureRecognizer"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GestureRecognizer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-813851001,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Grid","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Grid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ColumnDefinitions","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma-separated list of column definitions. A column definition can be:\n            Auto-sized with the <c>Auto</c> keyword; A numeric size, such as <c>80.5</c>; Or a relative size, such as <c>*</c>, <c>2*</c>, or <c>3.5*</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ColumnDefinitions"}},{"Kind":"Components.Component","Name":"RowDefinitions","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma-separated list of row definitions. A row definition can be:\n            Auto-sized with the <c>Auto</c> keyword; A numeric size, such as <c>80.5</c>; Or a relative size, such as <c>*</c>, <c>2*</c>, or <c>3.5*</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RowDefinitions"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ColumnSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Provides the interface for the bound property that gets or sets the distance between columns in the Grid.\n            </summary>\n            <value>\n            The space between columns in this <see cref=\"T:Xamarin.Forms.Grid\" /> layout. The default is 6.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ColumnSpacing"}},{"Kind":"Components.Component","Name":"RowSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the amount of space left between rows in the Grid. This is a bindable property.\n            </summary>\n            <value>\n            The space between rows\n            </value>\n        ","Metadata":{"Common.PropertyName":"RowSpacing"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Grid"}},{"HashCode":984689555,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Grid","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Grid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ColumnDefinitions","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma-separated list of column definitions. A column definition can be:\n            Auto-sized with the <c>Auto</c> keyword; A numeric size, such as <c>80.5</c>; Or a relative size, such as <c>*</c>, <c>2*</c>, or <c>3.5*</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ColumnDefinitions"}},{"Kind":"Components.Component","Name":"RowDefinitions","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma-separated list of row definitions. A row definition can be:\n            Auto-sized with the <c>Auto</c> keyword; A numeric size, such as <c>80.5</c>; Or a relative size, such as <c>*</c>, <c>2*</c>, or <c>3.5*</c>.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RowDefinitions"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ColumnSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Provides the interface for the bound property that gets or sets the distance between columns in the Grid.\n            </summary>\n            <value>\n            The space between columns in this <see cref=\"T:Xamarin.Forms.Grid\" /> layout. The default is 6.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ColumnSpacing"}},{"Kind":"Components.Component","Name":"RowSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the amount of space left between rows in the Grid. This is a bindable property.\n            </summary>\n            <value>\n            The space between rows\n            </value>\n        ","Metadata":{"Common.PropertyName":"RowSpacing"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Grid","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1541185774,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Grid.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Grid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Grid.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":482720022,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Grid.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Grid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Grid.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1060016935,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.GridCell","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Column","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Column"}},{"Kind":"Components.Component","Name":"ColumnSpan","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"ColumnSpan"}},{"Kind":"Components.Component","Name":"Row","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Row"}},{"Kind":"Components.Component","Name":"RowSpan","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"RowSpan"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GridCell"}},{"HashCode":-1094745804,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.GridCell","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.GridCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Column","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Column"}},{"Kind":"Components.Component","Name":"ColumnSpan","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"ColumnSpan"}},{"Kind":"Components.Component","Name":"Row","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"Row"}},{"Kind":"Components.Component","Name":"RowSpan","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"RowSpan"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GridCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1670253887,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.GridCell.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"GridCell"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GridCell.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":173673601,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.GridCell.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.GridCell"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.GridCell.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2001408136,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Image","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Image"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Aspect","TypeName":"Xamarin.Forms.Aspect?","Documentation":"\n            <summary>\n            Gets or sets the scaling mode for the image. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.Aspect\" /> representing the scaling mode of the image. Default is <see cref=\"F:Xamarin.Forms.Aspect.AspectFit\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Aspect"}},{"Kind":"Components.Component","Name":"IsAnimationPlaying","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsAnimationPlaying"}},{"Kind":"Components.Component","Name":"IsOpaque","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a Boolean value that, if <see langword=\"true\" /> hints to the rendering engine that it may safely omit drawing visual elements behind the image.\n            </summary>\n            <value>\n            The value of the opacity rendering hint.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsOpaque"}},{"Kind":"Components.Component","Name":"Source","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Gets or sets the source of the image. This is a bindable property.\n            </summary>\n            <value>\n            An <see cref=\"T:Xamarin.Forms.ImageSource\" /> representing the image source. Default is null.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Image"}},{"HashCode":1229995220,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Image","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Image"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Aspect","TypeName":"Xamarin.Forms.Aspect?","Documentation":"\n            <summary>\n            Gets or sets the scaling mode for the image. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.Aspect\" /> representing the scaling mode of the image. Default is <see cref=\"F:Xamarin.Forms.Aspect.AspectFit\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Aspect"}},{"Kind":"Components.Component","Name":"IsAnimationPlaying","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsAnimationPlaying"}},{"Kind":"Components.Component","Name":"IsOpaque","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a Boolean value that, if <see langword=\"true\" /> hints to the rendering engine that it may safely omit drawing visual elements behind the image.\n            </summary>\n            <value>\n            The value of the opacity rendering hint.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsOpaque"}},{"Kind":"Components.Component","Name":"Source","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Gets or sets the source of the image. This is a bindable property.\n            </summary>\n            <value>\n            An <see cref=\"T:Xamarin.Forms.ImageSource\" /> representing the image source. Default is null.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Image","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1581463411,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ImageButton","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ImageButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnPress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRelease","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnRelease","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Aspect","TypeName":"Xamarin.Forms.Aspect?","Metadata":{"Common.PropertyName":"Aspect"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"IsOpaque","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsOpaque"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Source","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ImageButton"}},{"HashCode":-1716821345,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ImageButton","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ImageButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPress","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnPress","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnRelease","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnRelease","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Aspect","TypeName":"Xamarin.Forms.Aspect?","Metadata":{"Common.PropertyName":"Aspect"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"IsOpaque","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsOpaque"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Source","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ImageButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1957759766,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.InputView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder.\n            </summary>\n            <value>\n            The number of device-independent units that should be in between characters in the text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether user should be prevented from modifying the text. Default is <see langword=\"false\" />.\n            </summary>\n            <value>\n            If <see langword=\"true\" />, user cannot modify text. Else, <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsSpellCheckEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether spell checking is enabled.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if spell checking is enabled. Otherwise <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsSpellCheckEnabled"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the maximum allowed length of input.\n            </summary>\n            <value>\n            An integer in the interval [0,<c>int.MaxValue</c>]. The default value is <c>Int.MaxValue</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text that is displayed when the control is empty.\n            </summary>\n            <value>\n            The text that is displayed when the control is empty.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PlaceholderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the placeholder text.\n            </summary>\n            <value>\n            The color of the placeholder text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"PlaceholderColor"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text of the input view. This is a bindable property.\n            </summary>\n            <value>\n            A string containing the text of the input view. The default value is null.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.InputView"}},{"HashCode":-732854156,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.InputView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.InputView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder.\n            </summary>\n            <value>\n            The number of device-independent units that should be in between characters in the text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether user should be prevented from modifying the text. Default is <see langword=\"false\" />.\n            </summary>\n            <value>\n            If <see langword=\"true\" />, user cannot modify text. Else, <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsSpellCheckEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether spell checking is enabled.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if spell checking is enabled. Otherwise <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsSpellCheckEnabled"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the maximum allowed length of input.\n            </summary>\n            <value>\n            An integer in the interval [0,<c>int.MaxValue</c>]. The default value is <c>Int.MaxValue</c>.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text that is displayed when the control is empty.\n            </summary>\n            <value>\n            The text that is displayed when the control is empty.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"PlaceholderColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the placeholder text.\n            </summary>\n            <value>\n            The color of the placeholder text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"PlaceholderColor"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text of the input view. This is a bindable property.\n            </summary>\n            <value>\n            A string containing the text of the input view. The default value is null.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.InputView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-52738033,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Label","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Label"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the label is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family to which the font for the label belongs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets the size of the font for the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"HorizontalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Documentation":"\n            <summary>\n            Gets or sets the horizontal alignment of the Text property. This is a bindable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HorizontalTextAlignment"}},{"Kind":"Components.Component","Name":"LineBreakMode","TypeName":"Xamarin.Forms.LineBreakMode?","Documentation":"\n            <summary>\n            Gets or sets the LineBreakMode for the Label. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:Xamarin.Forms.LineBreakMode\" /> value for the Label. The default is <see cref=\"F:Xamarin.Forms.LineBreakMode.WordWrap\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"LineBreakMode"}},{"Kind":"Components.Component","Name":"LineHeight","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the multiplier to apply to the default line height when displaying text.\n            </summary>\n            <value>\n            The multiplier to apply to the default line height when displaying text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"LineHeight"}},{"Kind":"Components.Component","Name":"MaxLines","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the maximum number of lines allowed in the <see cref=\"T:Xamarin.Forms.Label\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxLines"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text for the Label. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:System.String\" /> value to be displayed inside of the Label.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.Color\" /> for the text of this Label. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:Xamarin.Forms.Color\" /> value.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextDecorations","TypeName":"Xamarin.Forms.TextDecorations?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.TextDecorations\" /> applied to <see cref=\"P:Xamarin.Forms.Label.Text\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextDecorations"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"TextType","TypeName":"Xamarin.Forms.TextType?","Metadata":{"Common.PropertyName":"TextType"}},{"Kind":"Components.Component","Name":"VerticalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Documentation":"\n            <summary>\n            Gets or sets the vertical alignement of the Text property. This is a bindable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VerticalTextAlignment"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Label"}},{"HashCode":153500581,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Label","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Label"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the label is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family to which the font for the label belongs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets the size of the font for the label.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"HorizontalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Documentation":"\n            <summary>\n            Gets or sets the horizontal alignment of the Text property. This is a bindable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HorizontalTextAlignment"}},{"Kind":"Components.Component","Name":"LineBreakMode","TypeName":"Xamarin.Forms.LineBreakMode?","Documentation":"\n            <summary>\n            Gets or sets the LineBreakMode for the Label. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:Xamarin.Forms.LineBreakMode\" /> value for the Label. The default is <see cref=\"F:Xamarin.Forms.LineBreakMode.WordWrap\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"LineBreakMode"}},{"Kind":"Components.Component","Name":"LineHeight","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the multiplier to apply to the default line height when displaying text.\n            </summary>\n            <value>\n            The multiplier to apply to the default line height when displaying text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"LineHeight"}},{"Kind":"Components.Component","Name":"MaxLines","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Gets or sets the maximum number of lines allowed in the <see cref=\"T:Xamarin.Forms.Label\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaxLines"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text for the Label. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:System.String\" /> value to be displayed inside of the Label.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.Color\" /> for the text of this Label. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:Xamarin.Forms.Color\" /> value.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextDecorations","TypeName":"Xamarin.Forms.TextDecorations?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.TextDecorations\" /> applied to <see cref=\"P:Xamarin.Forms.Label.Text\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextDecorations"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"TextType","TypeName":"Xamarin.Forms.TextType?","Metadata":{"Common.PropertyName":"TextType"}},{"Kind":"Components.Component","Name":"VerticalTextAlignment","TypeName":"Xamarin.Forms.TextAlignment?","Documentation":"\n            <summary>\n            Gets or sets the vertical alignement of the Text property. This is a bindable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VerticalTextAlignment"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Label","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-920383815,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Label.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Label"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Label.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1123518953,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Label.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Label"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Label.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1789349462,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MasterDetailPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MasterTitle","TypeName":"System.String","Metadata":{"Common.PropertyName":"MasterTitle"}},{"Kind":"Components.Component","Name":"Master","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Master","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Detail","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Detail","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsGestureEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that turns on or off the gesture to reveal the master page. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if gesture is enabled; otherwise <see langword=\"false\" />. Default is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsGestureEnabled"}},{"Kind":"Components.Component","Name":"IsPresented","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether or not the visual element that is represented by the <see cref=\"P:Xamarin.Forms.MasterDetailPage.Master\" /> property is presented to the user.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPresented"}},{"Kind":"Components.Component","Name":"MasterBehavior","TypeName":"Xamarin.Forms.MasterBehavior?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates how detail content is displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MasterBehavior"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage"}},{"HashCode":-1938148909,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MasterTitle","TypeName":"System.String","Metadata":{"Common.PropertyName":"MasterTitle"}},{"Kind":"Components.Component","Name":"Master","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Master","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Detail","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Detail","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsGestureEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that turns on or off the gesture to reveal the master page. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if gesture is enabled; otherwise <see langword=\"false\" />. Default is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsGestureEnabled"}},{"Kind":"Components.Component","Name":"IsPresented","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether or not the visual element that is represented by the <see cref=\"P:Xamarin.Forms.MasterDetailPage.Master\" /> property is presented to the user.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsPresented"}},{"Kind":"Components.Component","Name":"MasterBehavior","TypeName":"Xamarin.Forms.MasterBehavior?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates how detail content is displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MasterBehavior"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":705425680,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Master","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Master","ParentTag":"MasterDetailPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Master","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1803647045,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Master","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Master","ParentTag":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Master","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-339619633,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Detail","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Detail","ParentTag":"MasterDetailPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Detail","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":941974894,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Detail","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Detail","ParentTag":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.Detail","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1118870160,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MasterDetailPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1525297921,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MasterDetailPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-835362369,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.MenuItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsDestructive","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether or not the menu item removes its associated UI element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDestructive"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            For internal use by the Xamarin.Forms platform.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the StyleClass of the generated <see cref=\"T:Xamarin.Forms.FlyoutItem\" /> when used with <see cref=\"T:Xamarin.Forms.Shell\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            The text of the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MenuItem"}},{"HashCode":-1876124433,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.MenuItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.MenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsDestructive","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether or not the menu item removes its associated UI element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsDestructive"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            For internal use by the Xamarin.Forms platform.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Sets the StyleClass of the generated <see cref=\"T:Xamarin.Forms.FlyoutItem\" /> when used with <see cref=\"T:Xamarin.Forms.Shell\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            The text of the menu item.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.MenuItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1155245222,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ModalContainer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ModalContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClosed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ModalContainer"}},{"HashCode":1017586756,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ModalContainer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ModalContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnClosed","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnClosed","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ModalContainer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-781965023,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ModalContainer.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ModalContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ModalContainer.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1690011508,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ModalContainer.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ModalContainer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ModalContainer.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2089229651,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.NavigableElement","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavigableElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.NavigableElement"}},{"HashCode":1417255583,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.NavigableElement","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.NavigableElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.NavigableElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2005683100,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Page","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Page"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Page"}},{"HashCode":1205950953,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Page","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Page"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Page","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1218462337,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Page.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Page"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Page.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-845876607,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Page.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Page"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Page.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":791587094,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.PanGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PanGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnPanUpdated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.PanUpdatedEventArgs>","Metadata":{"Common.PropertyName":"OnPanUpdated","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.PanGestureRecognizer"}},{"HashCode":530871424,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.PanGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.PanGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnPanUpdated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.PanUpdatedEventArgs>","Metadata":{"Common.PropertyName":"OnPanUpdated","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.PanGestureRecognizer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1942320074,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.PinchGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PinchGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnPinchUpdated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.PinchGestureUpdatedEventArgs>","Metadata":{"Common.PropertyName":"OnPinchUpdated","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.PinchGestureRecognizer"}},{"HashCode":-689101363,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.PinchGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.PinchGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnPinchUpdated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.PinchGestureUpdatedEventArgs>","Metadata":{"Common.PropertyName":"OnPinchUpdated","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.PinchGestureRecognizer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2077828213,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ProgressBar","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the progress value.\n            </summary>\n            <value>\n            Gets or sets a value that specifies the fraction of the bar that is colored.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"ProgressColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Get or sets the color of the progress bar.\n            </summary>\n            <value>\n            The color of the progress bar.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ProgressColor"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ProgressBar"}},{"HashCode":-353404103,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ProgressBar","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ProgressBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Progress","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the progress value.\n            </summary>\n            <value>\n            Gets or sets a value that specifies the fraction of the bar that is colored.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Progress"}},{"Kind":"Components.Component","Name":"ProgressColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Get or sets the color of the progress bar.\n            </summary>\n            <value>\n            The color of the progress bar.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ProgressColor"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ProgressBar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":181356402,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ScrollView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ScrollView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"Xamarin.Forms.ScrollBarVisibility?","Documentation":"\n            <summary>\n            Gets or sets a value that controls when the horizontal scroll bar is visible.\n            </summary>\n            <value>\n            A value that controls when the horizontal scroll bar is visible.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Xamarin.Forms.ScrollOrientation?","Documentation":"\n            <summary>\n            Gets or sets the scrolling direction of the ScrollView. This is a bindable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"Xamarin.Forms.ScrollBarVisibility?","Documentation":"\n            <summary>\n            Gets or sets a value that controls when the vertical scroll bar is visible.\n            </summary>\n            <value>\n            A value that controls when the vertical scroll bar is visible.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ScrollView"}},{"HashCode":489429905,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ScrollView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ScrollView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"Xamarin.Forms.ScrollBarVisibility?","Documentation":"\n            <summary>\n            Gets or sets a value that controls when the horizontal scroll bar is visible.\n            </summary>\n            <value>\n            A value that controls when the horizontal scroll bar is visible.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Xamarin.Forms.ScrollOrientation?","Documentation":"\n            <summary>\n            Gets or sets the scrolling direction of the ScrollView. This is a bindable property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"Xamarin.Forms.ScrollBarVisibility?","Documentation":"\n            <summary>\n            Gets or sets a value that controls when the vertical scroll bar is visible.\n            </summary>\n            <value>\n            A value that controls when the vertical scroll bar is visible.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ScrollView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1612148485,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ScrollView.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ScrollView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ScrollView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-138420656,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ScrollView.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ScrollView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ScrollView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-138207814,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Shell","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Shell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FlyoutHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlyoutHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.ShellNavigatedEventArgs>","Metadata":{"Common.PropertyName":"OnNavigated","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNavigating","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.ShellNavigatingEventArgs>","Metadata":{"Common.PropertyName":"OnNavigating","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutBackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the background color of the <see cref=\"P:Xamarin.Forms.Shell\" /> Flyout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutBackgroundColor"}},{"Kind":"Components.Component","Name":"FlyoutBackgroundImage","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"FlyoutBackgroundImage"}},{"Kind":"Components.Component","Name":"FlyoutBackgroundImageAspect","TypeName":"Xamarin.Forms.Aspect?","Metadata":{"Common.PropertyName":"FlyoutBackgroundImageAspect"}},{"Kind":"Components.Component","Name":"FlyoutBehavior","TypeName":"Xamarin.Forms.FlyoutBehavior?","Documentation":"\n            <summary>\n            Setting the <see cref=\"T:Xamarin.Forms.FlyoutBehavior\" /> property to Disabled hides the flyout, which is useful when you only have one ShellItem. The other valid FlyoutBehavior values are Flyout (default), and Locked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutBehavior"}},{"Kind":"Components.Component","Name":"FlyoutHeaderBehavior","TypeName":"Xamarin.Forms.FlyoutHeaderBehavior?","Documentation":"\n            <summary>\n            Setting the FlyoutHeaderBehavior to CollapseOnScroll collapses the flyout as scrolling occurs. The other valid FlyoutHeaderBehavior values are Default, Fixed, and Scroll (scroll with the menu items).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutHeaderBehavior"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Gets or sets the icon that, when pressed, opens the <see cref=\"P:Xamarin.Forms.Shell\" /> Flyout.\n            </summary>\n            <value>\n            The default icon is a \"hamburger\" icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"FlyoutIsPresented","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets the visible status of the <see cref=\"P:Xamarin.Forms.Shell\" /> Flyout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutIsPresented"}},{"Kind":"Components.Component","Name":"FlyoutVerticalScrollMode","TypeName":"Xamarin.Forms.ScrollMode?","Metadata":{"Common.PropertyName":"FlyoutVerticalScrollMode"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Shell"}},{"HashCode":955797888,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Shell","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Shell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FlyoutHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlyoutHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigated","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.ShellNavigatedEventArgs>","Metadata":{"Common.PropertyName":"OnNavigated","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnNavigating","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.ShellNavigatingEventArgs>","Metadata":{"Common.PropertyName":"OnNavigating","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutBackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the background color of the <see cref=\"P:Xamarin.Forms.Shell\" /> Flyout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutBackgroundColor"}},{"Kind":"Components.Component","Name":"FlyoutBackgroundImage","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"FlyoutBackgroundImage"}},{"Kind":"Components.Component","Name":"FlyoutBackgroundImageAspect","TypeName":"Xamarin.Forms.Aspect?","Metadata":{"Common.PropertyName":"FlyoutBackgroundImageAspect"}},{"Kind":"Components.Component","Name":"FlyoutBehavior","TypeName":"Xamarin.Forms.FlyoutBehavior?","Documentation":"\n            <summary>\n            Setting the <see cref=\"T:Xamarin.Forms.FlyoutBehavior\" /> property to Disabled hides the flyout, which is useful when you only have one ShellItem. The other valid FlyoutBehavior values are Flyout (default), and Locked.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutBehavior"}},{"Kind":"Components.Component","Name":"FlyoutHeaderBehavior","TypeName":"Xamarin.Forms.FlyoutHeaderBehavior?","Documentation":"\n            <summary>\n            Setting the FlyoutHeaderBehavior to CollapseOnScroll collapses the flyout as scrolling occurs. The other valid FlyoutHeaderBehavior values are Default, Fixed, and Scroll (scroll with the menu items).\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutHeaderBehavior"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Gets or sets the icon that, when pressed, opens the <see cref=\"P:Xamarin.Forms.Shell\" /> Flyout.\n            </summary>\n            <value>\n            The default icon is a \"hamburger\" icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"FlyoutIsPresented","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets the visible status of the <see cref=\"P:Xamarin.Forms.Shell\" /> Flyout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutIsPresented"}},{"Kind":"Components.Component","Name":"FlyoutVerticalScrollMode","TypeName":"Xamarin.Forms.ScrollMode?","Metadata":{"Common.PropertyName":"FlyoutVerticalScrollMode"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Shell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-342057827,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Shell.FlyoutHeader","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlyoutHeader","ParentTag":"Shell"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Shell.FlyoutHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2081220940,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Shell.FlyoutHeader","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlyoutHeader","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Shell"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Shell.FlyoutHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2012041900,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Shell.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Shell"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Shell.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2082550558,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Shell.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Shell"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Shell.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1095358382,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ShellContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellContent"}},{"HashCode":-40176811,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ShellContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-261864983,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ShellContent.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ShellContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-579142723,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ShellContent.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ShellContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":76292344,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellGroupItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ShellGroupItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellGroupItem"}},{"HashCode":-520190841,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellGroupItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ShellGroupItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellGroupItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":456050106,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ShellItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellItem"}},{"HashCode":1444855716,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellItem","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ShellItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1395431456,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ShellItem.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ShellItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1694925254,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ShellItem.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ShellItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":151792161,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellSection","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ShellSection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellSection"}},{"HashCode":-1647309248,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.ShellSection","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.ShellSection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellSection","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-978927375,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ShellSection.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ShellSection"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellSection.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1245088555,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.ShellSection.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.ShellSection"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.ShellSection.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":21993636,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Slider","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Slider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnDragCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDragCompleted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDragStarted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the maximum selectable value for the Slider. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"MaximumTrackColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the portion of the slider track that contains the maximum value of the slider.\n            </summary>\n            <value>\n            Thhe color of the portion of the slider track that contains the maximum value of the slider.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaximumTrackColor"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the minimum selectable value for the Slider. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"MinimumTrackColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the portion of the slider track that contains the minimum value of the slider.\n            </summary>\n            <value>\n            Thhe color of the portion of the slider track that contains the minimum value of the slider.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumTrackColor"}},{"Kind":"Components.Component","Name":"ThumbColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the slider thumb button.\n            </summary>\n            <value>\n            The color of the slider thumb button.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ThumbColor"}},{"Kind":"Components.Component","Name":"ThumbImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"ThumbImageSource"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the current value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Slider"}},{"HashCode":164924357,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Slider","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Slider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnDragCompleted","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDragCompleted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStarted","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDragStarted","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the maximum selectable value for the Slider. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"MaximumTrackColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the portion of the slider track that contains the maximum value of the slider.\n            </summary>\n            <value>\n            Thhe color of the portion of the slider track that contains the maximum value of the slider.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MaximumTrackColor"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the minimum selectable value for the Slider. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"MinimumTrackColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the portion of the slider track that contains the minimum value of the slider.\n            </summary>\n            <value>\n            Thhe color of the portion of the slider track that contains the minimum value of the slider.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumTrackColor"}},{"Kind":"Components.Component","Name":"ThumbColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the slider thumb button.\n            </summary>\n            <value>\n            The color of the slider thumb button.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ThumbColor"}},{"Kind":"Components.Component","Name":"ThumbImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"ThumbImageSource"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the current value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Slider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1221984337,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Span","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Span"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the Color of the span background.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the span is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family to which the font for the text in the span belongs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets the size of the font for the text in the span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"ForegroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the Color for the text in the span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForegroundColor"}},{"Kind":"Components.Component","Name":"LineHeight","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the multiplier to apply to the default line height when displaying text.\n            </summary>\n            <value>\n            The multiplier to apply to the default line height when displaying text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"LineHeight"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text of the span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextDecorations","TypeName":"Xamarin.Forms.TextDecorations?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.TextDecorations\" /> applied to this span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextDecorations"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Span"}},{"HashCode":2048309656,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Span","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Span"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the Color of the span background.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            Gets a value that indicates whether the font for the span is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets the font family to which the font for the text in the span belongs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets the size of the font for the text in the span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"ForegroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the Color for the text in the span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ForegroundColor"}},{"Kind":"Components.Component","Name":"LineHeight","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the multiplier to apply to the default line height when displaying text.\n            </summary>\n            <value>\n            The multiplier to apply to the default line height when displaying text.\n            </value>\n        ","Metadata":{"Common.PropertyName":"LineHeight"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the text of the span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextDecorations","TypeName":"Xamarin.Forms.TextDecorations?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.TextDecorations\" /> applied to this span.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextDecorations"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Span","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1583362238,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Span.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Span"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Span.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1635297158,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Span.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Span"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Span.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1418243312,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.StackLayout","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StackLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Xamarin.Forms.StackOrientation?","Documentation":"\n            <summary>\n            Gets or sets the value which indicates the direction which child elements are positioned.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.StackOrientation\" /> which indicates the direction children layouts flow. The default value is Vertical.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which indicates the amount of space between each child element.\n            </summary>\n            <value>\n            A value in device pixels which indicates the amount of space between each element. The default value is 6.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Spacing"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.StackLayout"}},{"HashCode":-1927318796,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.StackLayout","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.StackLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"Xamarin.Forms.StackOrientation?","Documentation":"\n            <summary>\n            Gets or sets the value which indicates the direction which child elements are positioned.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.StackOrientation\" /> which indicates the direction children layouts flow. The default value is Vertical.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Spacing","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which indicates the amount of space between each child element.\n            </summary>\n            <value>\n            A value in device pixels which indicates the amount of space between each element. The default value is 6.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Spacing"}},{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.StackLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":246850860,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.StackLayout.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"StackLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.StackLayout.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-758086340,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.StackLayout.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.StackLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.StackLayout.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1011483315,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Stepper","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Stepper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Increment","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the increment by which Value is increased or decreased. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Increment"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the maximum selectable value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the minimum selectabel value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the current value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Stepper"}},{"HashCode":362117194,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Stepper","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Stepper"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Increment","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the increment by which Value is increased or decreased. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Increment"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the maximum selectable value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the minimum selectabel value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the current value. This is a bindable property.\n            </summary>\n            <value>\n            A double.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Stepper","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1350392633,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.StyleSheet","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StyleSheet"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Assembly","TypeName":"System.Reflection.Assembly","Metadata":{"Common.PropertyName":"Assembly"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.String","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.StyleSheet"}},{"HashCode":1626777297,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.StyleSheet","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.StyleSheet"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Assembly","TypeName":"System.Reflection.Assembly","Metadata":{"Common.PropertyName":"Assembly"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.String","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.StyleSheet","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1193958828,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.SwipeGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SwipeGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Direction","TypeName":"Xamarin.Forms.SwipeDirection?","Metadata":{"Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"Threshold","TypeName":"System.UInt32?","Metadata":{"Common.PropertyName":"Threshold"}},{"Kind":"Components.Component","Name":"OnSwiped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.SwipedEventArgs>","Metadata":{"Common.PropertyName":"OnSwiped","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.SwipeGestureRecognizer"}},{"HashCode":394450237,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.SwipeGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.SwipeGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Direction","TypeName":"Xamarin.Forms.SwipeDirection?","Metadata":{"Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"Threshold","TypeName":"System.UInt32?","Metadata":{"Common.PropertyName":"Threshold"}},{"Kind":"Components.Component","Name":"OnSwiped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.SwipedEventArgs>","Metadata":{"Common.PropertyName":"OnSwiped","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.SwipeGestureRecognizer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1118260505,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Switch","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Switch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsToggledChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsToggled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a Boolean value that indicates whether this <see cref=\"T:Xamarin.Forms.Switch\" /> element is toggled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggled"}},{"Kind":"Components.Component","Name":"OnColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the switch when it is in the \"On\" position.\n            </summary>\n            <value>\n            The color of the switch when it is in the \"On\" position.\n            </value>\n        ","Metadata":{"Common.PropertyName":"OnColor"}},{"Kind":"Components.Component","Name":"ThumbColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"ThumbColor"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Switch"}},{"HashCode":-1380057358,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Switch","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Switch"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsToggledChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsToggledChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsToggled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a Boolean value that indicates whether this <see cref=\"T:Xamarin.Forms.Switch\" /> element is toggled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsToggled"}},{"Kind":"Components.Component","Name":"OnColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of the switch when it is in the \"On\" position.\n            </summary>\n            <value>\n            The color of the switch when it is in the \"On\" position.\n            </value>\n        ","Metadata":{"Common.PropertyName":"OnColor"}},{"Kind":"Components.Component","Name":"ThumbColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"ThumbColor"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Switch","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1692739620,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Tab","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Tab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Tab"}},{"HashCode":-896547137,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.Tab","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Tab"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Tab","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1027961379,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Tab.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Tab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Tab.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1566500200,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.Tab.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.Tab"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Tab.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":506238734,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TabBar","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabBar"}},{"HashCode":-2112329197,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TabBar","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TabBar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlyoutDisplayOptions","TypeName":"Xamarin.Forms.FlyoutDisplayOptions?","Documentation":"\n            <summary>\n            AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref=\"T:Xamarin.Forms.MenuItem\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FlyoutDisplayOptions"}},{"Kind":"Components.Component","Name":"OnAppearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnAppearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDisappearing","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnDisappearing","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FlyoutIcon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            The icon to use for the item. If this property is unset, it will fallback to using the <see cref=\"P:Xamarin.Forms.BaseShellItem.Icon\" /> property value.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlyoutIcon"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"Xamarin.Forms.ImageSource","Documentation":"\n            <summary>\n            Defines the icon to display in parts of the chrome that are not the flyout.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.ImageSource\" /> that represents an icon.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Defines if the item is selectable in the chrome.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the item is selectable in the chrome.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Indicates whether a FlyoutItem is included in tab navigation.\n            </summary>\n            <value>\n            Default value is <see langword=\"true\" />; when <see langword=\"false\" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Route","TypeName":"System.String","Documentation":"\n            <summary>\n            The string used to address the item.\n            </summary>\n            <value>\n            A unique string that identifies the item.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"\n            <summary>\n            Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.\n            </summary>\n            <value>\n            Defaults to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            Title to display in the UI.\n            </summary>\n            <value>\n            Title to display in the UI.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabBar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1404143617,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.TabBar.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TabBar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabBar.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1557447124,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.TabBar.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.TabBar"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabBar.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":236469129,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TabbedPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TabbedPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BarBackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the background color of the bar.\n            </summary>\n            <value>\n            The background color of the bar.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BarBackgroundColor"}},{"Kind":"Components.Component","Name":"BarTextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of text on the bar.\n            </summary>\n            <value>\n            The color of text on the bar.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BarTextColor"}},{"Kind":"Components.Component","Name":"SelectedTabColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"SelectedTabColor"}},{"Kind":"Components.Component","Name":"UnselectedTabColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"UnselectedTabColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabbedPage"}},{"HashCode":-912389845,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TabbedPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TabbedPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BarBackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the background color of the bar.\n            </summary>\n            <value>\n            The background color of the bar.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BarBackgroundColor"}},{"Kind":"Components.Component","Name":"BarTextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color of text on the bar.\n            </summary>\n            <value>\n            The color of text on the bar.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BarTextColor"}},{"Kind":"Components.Component","Name":"SelectedTabColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"SelectedTabColor"}},{"Kind":"Components.Component","Name":"UnselectedTabColor","TypeName":"Xamarin.Forms.Color?","Metadata":{"Common.PropertyName":"UnselectedTabColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabbedPage","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1224131582,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.TabbedPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TabbedPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabbedPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":900057221,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.TabbedPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.TabbedPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TabbedPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-264565358,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TapGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TapGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NumberOfTapsRequired","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"NumberOfTapsRequired"}},{"Kind":"Components.Component","Name":"OnTapped","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnTapped","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TapGestureRecognizer"}},{"HashCode":-1073621232,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TapGestureRecognizer","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TapGestureRecognizer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NumberOfTapsRequired","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"NumberOfTapsRequired"}},{"Kind":"Components.Component","Name":"OnTapped","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnTapped","Components.EventCallback":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TapGestureRecognizer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":34300118,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TemplatedPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage"}},{"HashCode":-1105407664,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"BackgroundImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"BackgroundImageSource"}},{"Kind":"Components.Component","Name":"IconImageSource","TypeName":"Xamarin.Forms.ImageSource","Metadata":{"Common.PropertyName":"IconImageSource"}},{"Kind":"Components.Component","Name":"IsBusy","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.\n            </summary>\n            <value>\n            A bool indicating if the Page is busy or not.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsBusy"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            The space between the content of the <see cref=\"T:Xamarin.Forms.Page\" /> and it's border.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"\n            <summary>\n            The <see cref=\"T:Xamarin.Forms.Page\" />'s title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":639332480,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TemplatedPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1244265942,"Kind":"Components.ChildContent","Name":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage.ChildContent","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TemplatedPage.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-844907403,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TemplatedView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TemplatedView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TemplatedView"}},{"HashCode":437649301,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TemplatedView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TemplatedView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CascadeInputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that controls whether child elements inherit the input transparency of <see langword=\"this\" /> layout when the tranparency is <see langword=\"true\" />.\n            </summary>\n            <value>\n            <see langword=\"true\" /> to cause child elements to inherit the input transparency of <see langword=\"this\" /> layout, when <see langword=\"this\" /> layout's <see cref=\"P:Xamarin.Forms.VisualElement.InputTransparent\" /> is true. <see langword=\"false\" /> to cause child elements to ignore the input tranparency of <see langword=\"this\" /> layout.\n            </value>\n        ","Metadata":{"Common.PropertyName":"CascadeInputTransparent"}},{"Kind":"Components.Component","Name":"IsClippedToBounds","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value which determines if the Layout should clip its children to its bounds.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the Layout is clipped; otherwise, <see langword=\"false\" />. The default value is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsClippedToBounds"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the inner padding of the Layout.\n            </summary>\n            <value>\n            The Thickness values for the layout. The default value is a Thickness with all values set to 0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TemplatedView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1193042912,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TimePicker","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TimeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan>","Metadata":{"Common.PropertyName":"TimeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            TGets a value that indicates whether the font for the searchbar text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the font family for the picker text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the size of the font for the text in the picker.\n            </summary>\n            <value>\n            A <see langword=\"double\" /> that indicates the size of the font.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format of the time to display to the user. This is a bindable property.\n            </summary>\n            <value>\n            A valid time format string.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"Time","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the displayed time. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:System.TimeSpan\" /> displayed in the TimePicker.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Time"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TimePicker"}},{"HashCode":-1248737039,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.TimePicker","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TimePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TimeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan>","Metadata":{"Common.PropertyName":"TimeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"CharacterSpacing","TypeName":"System.Double?","Metadata":{"Common.PropertyName":"CharacterSpacing"}},{"Kind":"Components.Component","Name":"FontAttributes","TypeName":"Xamarin.Forms.FontAttributes?","Documentation":"\n            <summary>\n            TGets a value that indicates whether the font for the searchbar text is bold, italic, or neither.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontAttributes"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the font family for the picker text.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the size of the font for the text in the picker.\n            </summary>\n            <value>\n            A <see langword=\"double\" /> that indicates the size of the font.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format of the time to display to the user. This is a bindable property.\n            </summary>\n            <value>\n            A valid time format string.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"TextColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the text color.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"TextColor"}},{"Kind":"Components.Component","Name":"TextTransform","TypeName":"Xamarin.Forms.TextTransform?","Metadata":{"Common.PropertyName":"TextTransform"}},{"Kind":"Components.Component","Name":"Time","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the displayed time. This is a bindable property.\n            </summary>\n            <value>\n            The <see cref=\"T:System.TimeSpan\" /> displayed in the TimePicker.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Time"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TimePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1205813529,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.View","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"View"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.View"}},{"HashCode":-1929951204,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.View","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.View"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.View","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-916761078,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.VisualElement","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VisualElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.VisualElement"}},{"HashCode":32253012,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.VisualElement","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.VisualElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.VisualElement","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-47145739,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.WebView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"WebView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Source","TypeName":"Xamarin.Forms.WebViewSource","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"OnWebMessageReceived","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnWebMessageReceived","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.WebView"}},{"HashCode":1875906638,"Kind":"Components.Component","Name":"Microsoft.MobileBlazorBindings.Elements.WebView","AssemblyName":"Microsoft.MobileBlazorBindings","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.WebView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Source","TypeName":"Xamarin.Forms.WebViewSource","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"OnWebMessageReceived","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Common.PropertyName":"OnWebMessageReceived","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"HorizontalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HorizontalOptions"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Xamarin.Forms.Thickness?","Documentation":"\n            <summary>\n            Gets or sets the margin for the view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"VerticalOptions","TypeName":"Xamarin.Forms.LayoutOptions?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> that define how the element gets laid in a layout cycle. This is a bindable property.\n            </summary>\n            <value>\n            A <see cref=\"T:Xamarin.Forms.LayoutOptions\" /> which defines how to lay out the element. Default value is <see cref=\"F:Xamarin.Forms.LayoutOptions.Fill\" /> unless otherwise documented.\n            </value>\n        ","Metadata":{"Common.PropertyName":"VerticalOptions"}},{"Kind":"Components.Component","Name":"OnFocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnFocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSizeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnSizeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnUnfocused","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Xamarin.Forms.FocusEventArgs>","Metadata":{"Common.PropertyName":"OnUnfocused","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AnchorX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the X component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorX"}},{"Kind":"Components.Component","Name":"AnchorY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.\n            </summary>\n            <value>\n            The value that declares the Y component of the transform. The default value is 0.5.\n            </value>\n        ","Metadata":{"Common.PropertyName":"AnchorY"}},{"Kind":"Components.Component","Name":"BackgroundColor","TypeName":"Xamarin.Forms.Color?","Documentation":"\n            <summary>\n            Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.\n            </summary>\n            <value>\n            The color that is used to fill the background of a VisualElement. The default is <see cref=\"P:Xamarin.Forms.Color.Default\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"BackgroundColor"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"Xamarin.Forms.FlowDirection?","Documentation":"\n            <summary>\n            Gets or sets the layout flow direction.\n            </summary>\n            <value>\n            The layout flow direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"HeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired height override of this element.\n            </summary>\n            <value>\n            The height this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"HeightRequest"}},{"Kind":"Components.Component","Name":"InputTransparent","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"false\" /> if the element and its children should receive input; <see langword=\"true\" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword=\"false\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"InputTransparent"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is enabled; otherwise, <see langword=\"false\" />. The default value is <see langword=\"true\" />\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsTabStop","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element is included in tab navigation; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsTabStop"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.\n            </summary>\n            <value>\n            <see langword=\"true\" /> if the element should be rendered; otherwise, <see langword=\"false\" />. Default value is <see langword=\"true\" />.\n            </value>\n        ","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"MinimumHeightRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum height the element will request during layout.\n            </summary>\n            <value>\n            The minimum height the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumHeightRequest"}},{"Kind":"Components.Component","Name":"MinimumWidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a value which overrides the minimum width the element will request during layout.\n            </summary>\n            <value>\n            The minimum width the element requires. Default value is -1.\n            </value>\n        ","Metadata":{"Common.PropertyName":"MinimumWidthRequest"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.\n            </summary>\n            <value>\n            The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Z-axis (affine rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Z-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"RotationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the X-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the X-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationX"}},{"Kind":"Components.Component","Name":"RotationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the rotation about the Y-axis (perspective rotation) when the element is rendered.\n            </summary>\n            <value>\n            The rotation about the Y-axis in degrees.\n            </value>\n        ","Metadata":{"Common.PropertyName":"RotationY"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the scale factor applied to the element.\n            </summary>\n            <value>\n            The scale factor of the element. Default value is 1.0.\n            </value>\n        ","Metadata":{"Common.PropertyName":"Scale"}},{"Kind":"Components.Component","Name":"ScaleX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the X direction.\n            </summary>\n            <value>\n            The scale value to apply to the X direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleX"}},{"Kind":"Components.Component","Name":"ScaleY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets a scale value to apply to the Y direction.\n            </summary>\n            <value>\n            The scale value to apply to the Y direction.\n            </value>\n        ","Metadata":{"Common.PropertyName":"ScaleY"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TranslationX","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the X translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationX"}},{"Kind":"Components.Component","Name":"TranslationY","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the Y translation delta of the element.\n            </summary>\n            <value>\n            The amount to translate the element.\n            </value>\n        ","Metadata":{"Common.PropertyName":"TranslationY"}},{"Kind":"Components.Component","Name":"WidthRequest","TypeName":"System.Double?","Documentation":"\n            <summary>\n            Gets or sets the desired width override of this element.\n            </summary>\n            <value>\n            The width this element desires to be.\n            </value>\n        ","Metadata":{"Common.PropertyName":"WidthRequest"}},{"Kind":"Components.Component","Name":"class","TypeName":"System.String","Metadata":{"Common.PropertyName":"class"}},{"Kind":"Components.Component","Name":"StyleClass","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleClass"}},{"Kind":"Components.Component","Name":"AutomationId","TypeName":"System.String","Metadata":{"Common.PropertyName":"AutomationId"}},{"Kind":"Components.Component","Name":"ClassId","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClassId"}},{"Kind":"Components.Component","Name":"StyleId","TypeName":"System.String","Metadata":{"Common.PropertyName":"StyleId"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.WebView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1200245171,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1426932398,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":47185055,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1850708683,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":26565457,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView"}},{"HashCode":-1302987966,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1672107679,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":518590172,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":611928640,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView"}},{"HashCode":-1141793101,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":679671391,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router"}},{"HashCode":554513115,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":241544465,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":221948161,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":676142876,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-674451060,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-72126401,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm"}},{"HashCode":732171331,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1188418176,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2127375057,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1150014859,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":314627675,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-223202763,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True"}},{"HashCode":1736846144,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1208366372,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True"}},{"HashCode":-805485351,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-121647312,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True"}},{"HashCode":-135906745,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2128202854,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1185026400,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1423695076,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":-979733382,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":193881215,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":-200628299,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-128638089,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True"}},{"HashCode":1374846907,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":469678277,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}},{"HashCode":1332899149,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":729115655,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink"}},{"HashCode":2109611740,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-458654356,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1184003816,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":408198816,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1650522746,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":608967518,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1067591946,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":413833210,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1615019660,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1265811753,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":405266915,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1875276045,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1260591219,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1438110312,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-601456204,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1481005359,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1863860425,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-390845090,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-313478159,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-935786517,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1870724169,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1153832344,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1938063074,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":421689559,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-841772366,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2014140426,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-753815173,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1029065015,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-247281191,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1393975789,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-475357510,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-568918865,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-236190998,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1303813093,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1263064314,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":120992409,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2063845244,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-791597014,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":406193047,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1596789122,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1027155334,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1188177321,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2022318710,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1676938229,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1876145572,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1917457565,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":930495500,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":12876323,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":673100679,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2038706329,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2038205906,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1300341831,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1906615187,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":337862707,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1073429390,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1007482001,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":10538241,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-187318190,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-822260181,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-760863146,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-72702978,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1428753026,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1641126098,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1591184366,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":627326954,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-828836577,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":457700328,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-946171910,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":390584938,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1323656549,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1103916005,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1948095577,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1609849009,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1903780158,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1798344052,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-872740196,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":766728034,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":38189493,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":751471276,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":167898743,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":95579770,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-614068758,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-479160457,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1923755730,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1388801814,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":803277352,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1382017538,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-574764726,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1146006440,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1345107094,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-886857074,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1288481418,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1129927384,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1682341924,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1765844117,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes"}},{"HashCode":1771391579,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.Fallback":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind"}},{"HashCode":-1926863128,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1806902675,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-702456000,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"checkbox","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-482222366,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"text","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":401567156,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1118096480,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1907294309,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-210094461,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-440998489,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-269591902,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-759219191,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1586080658,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-931687006,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-574622217,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1050212897,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-93204662,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":2001373963,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.CheckBox","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.CheckBox"}},{"HashCode":-98728320,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.CheckBox","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.CheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.CheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1022439607,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.DatePicker","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Date' property and a change event delegate to the 'DateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DatePicker","Attributes":[{"Name":"@bind-Date","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Date","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"Binds the provided expression to the 'Date' property and a change event delegate to the 'DateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Date"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Date","Components.Bind.ChangeAttribute":"DateChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.DatePicker"}},{"HashCode":-1167181547,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.DatePicker","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Date' property and a change event delegate to the 'DateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.DatePicker","Attributes":[{"Name":"@bind-Date","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Date","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"Binds the provided expression to the 'Date' property and a change event delegate to the 'DateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Date"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Date","Components.Bind.ChangeAttribute":"DateChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.DatePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1229767793,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Entry","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Entry","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Entry"}},{"HashCode":-1180986923,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Entry","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Entry","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Entry","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-891994077,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Slider","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Slider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Slider"}},{"HashCode":385346385,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Slider","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Slider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Slider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1921847869,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Stepper","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Stepper","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Stepper"}},{"HashCode":852683261,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Stepper","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Stepper","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Stepper","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1049917905,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Switch","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'IsToggled' property and a change event delegate to the 'IsToggledChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Switch","Attributes":[{"Name":"@bind-IsToggled","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsToggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsToggled' property and a change event delegate to the 'IsToggledChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsToggled"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsToggled","Components.Bind.ChangeAttribute":"IsToggledChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Switch"}},{"HashCode":-1265205066,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.Switch","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'IsToggled' property and a change event delegate to the 'IsToggledChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.Switch","Attributes":[{"Name":"@bind-IsToggled","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsToggled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsToggled' property and a change event delegate to the 'IsToggledChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsToggled"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsToggled","Components.Bind.ChangeAttribute":"IsToggledChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.Switch","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1734985872,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.TimePicker","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimePicker","Attributes":[{"Name":"@bind-Time","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Time","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan>","Documentation":"Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Time"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Time","Components.Bind.ChangeAttribute":"TimeChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TimePicker"}},{"HashCode":1149556636,"Kind":"Components.Bind","Name":"Microsoft.MobileBlazorBindings.Elements.TimePicker","AssemblyName":"Microsoft.MobileBlazorBindings","Documentation":"Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.MobileBlazorBindings.Elements.TimePicker","Attributes":[{"Name":"@bind-Time","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Time","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan>","Documentation":"Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Time"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Time","Components.Bind.ChangeAttribute":"TimeChanged","Common.TypeName":"Microsoft.MobileBlazorBindings.Elements.TimePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1924143780,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":1111503178,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1147166324,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"}},{"HashCode":-1626924055,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1927050139,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"}},{"HashCode":2113109363,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1732453958,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"}},{"HashCode":1959666226,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-395158584,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":-1712502086,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-911826896,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":-352424576,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1740452605,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref"}},{"HashCode":2007196998,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key"}}],"CSharpLanguageVersion":703},"RootNamespace":"BlazorHybridDesktop","Documents":[{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\App.razor","TargetPath":"WebUI\\App.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\Pages\\Counter.razor","TargetPath":"WebUI\\Pages\\Counter.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\Pages\\FetchData.razor","TargetPath":"WebUI\\Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\Main.razor","TargetPath":"Main.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\Shared\\SurveyPrompt.razor","TargetPath":"WebUI\\Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\Shared\\MainLayout.razor","TargetPath":"WebUI\\Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\Pages\\Index.razor","TargetPath":"WebUI\\Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\Shared\\NavMenu.razor","TargetPath":"WebUI\\Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Git\\BlazorHybridDesktop\\BlazorHybridDesktop\\WebUI\\_Imports.razor","TargetPath":"WebUI\\_Imports.razor","FileKind":"componentImport"}],"SerializationFormat":"0.2"}